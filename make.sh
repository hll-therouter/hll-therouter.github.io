#!/bin/bash

function process_file() {
    file=$1

    if [[ $file == *.html ]]; then
        content=$(cat "$file")
        modified_content=$(echo "$content" | \
            sed -e 's/<\/html>//g' \
                -e 's/<\/body>//g' \
                -e 's/<div><\/div>//g' \
                -e 's/<span>router<\/span>/<span>TheRouter API 文档<\/span>/g' \
                -e 's/Link copied to clipboard/链接已复制到剪贴板/g' \
                -e 's/class="main-content"/class="api-main-content"/g' \
                -e 's/<div class="footer"><span class="go-to-top-icon"><a href="#content" id="go-to-top-link"><\/a><\/span><span>© 2024 Copyright<\/span><span class="pull-right"><span>Generated by <\/span><a href="https:\/\/github.com\/Kotlin\/dokka"><span>dokka<\/span><span class="padded-icon"><\/span><\/a><\/span><\/div>//g')

        container_html="<div id=\"container\">"
        start=$(echo "$modified_content" | grep -b -o "$container_html" | cut -d ":" -f 1)

        if [ -n "$start" ] && [ "$start" -gt 0 ]; then
            text="---\nlayout: default_api\n---\n\n\n${modified_content:${start}}\n\n"
            echo -e "$text" > "$file"
        else
            echo "Warning: $file does not contain '$container_html'"
        fi
    fi
}

function process_folder() {
    folder=$1

    if [ -d "$folder" ]; then
        files=$(find "$folder" -type f)
        for file in $files; do
            process_file "$file"
        done
    else
        echo "Error: $folder is not a directory"
    fi
}

process_folder "./api"
bundle exec jekyll serve


#### 对应的kotlin代码逻辑
# private fun test(folder: File) {
#     if (folder.isDirectory) {
#         val files = folder.listFiles()
#         if (files != null) {
#             for (file in files) {
#                 test(file)
#             }
#         }
#     } else {
#         if (folder.name.endsWith(".html")) {
#             val content = folder.readText()
#                     .replace("</html>", "")
#                     .replace("</body>", "")
#                     .replace("<div></div>", "")
#                     .replace("<span>router</span>", "<span>TheRouter API 文档</span>")
#                     .replace("Link copied to clipboard", "链接已复制到剪贴板")
#                     .replace("class=\"main-content\"", "class=\"api-main-content\"")
#                     .replace("<div class=\"footer\"><span class=\"go-to-top-icon\"><a href=\"#content\" id=\"go-to-top-link\"></a></span><span>© 2024 Copyright</span><span class=\"pull-right\"><span>Generated by </span><a href=\"https://github.com/Kotlin/dokka\"><span>dokka</span><span class=\"padded-icon\"></span></a></span></div>", "")

#             val continerHtml = "<div id=\"container\">"
#             val start = content.indexOf(continerHtml)
#             if (start > 0) {
#                 val text = "---\nlayout: default_api\n---\n\n\n${content.subSequence(start, content.length)}\n\n"
#                 folder.writeText(text)
#             } else {
#                 println(folder.absolutePath)
#             }
#         }
#     }
# }

